{"version":3,"file":"static/js/312.4c22fc79.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (key) => startsAsVariableToken(key) && singleCssVariableRegex.test(key);\nconst singleCssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)$/i;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\nconst complexRegex = /(var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\))|(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))|((-)?([\\d]*\\.?[\\d])+)/gi;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const matchedValues = originalValue.match(complexRegex) || [];\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    for (let i = 0; i < matchedValues.length; i++) {\n        const parsedValue = matchedValues[i];\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n    }\n    const tokenised = originalValue.replace(complexRegex, SPLIT_TOKEN);\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { mix } from '../../../utils/mix/index.mjs';\nimport { pipe } from '../../../utils/pipe.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.5\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.5\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.5 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, isMounted) {\n        const origin = getOrigin(target, transition || {}, this);\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","Queue","constructor","this","order","scheduled","Set","add","process","has","push","remove","index","indexOf","splice","delete","clear","length","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","arguments","undefined","queue","cancel","frameData","i","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","keepAlive","immediate","microtask","cancelMicrotask","queueMicrotask","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","postRender","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","noop","any","frame","cancelFrame","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","progress","from","to","toFromDifference","mixNumber","hueToRgb","q","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","color","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","matchedValues","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","clearTime","time","newTime","frameloopDriver","passTimestamp","stop","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","decay","tween","percentToProgress","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig"],"sourceRoot":""}