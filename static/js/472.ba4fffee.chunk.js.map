{"version":3,"file":"static/js/472.ba4fffee.chunk.js","mappings":"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","sources":["component/canvas/WebglPc.jsx","component/canvas/Flat.jsx","component/layout/About.jsx","component/widgets/CanvasLoader.jsx"],"sourcesContent":["import React, { Suspense, useMemo, useEffect } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { Html, Preload, PresentationControls, useGLTF, PerformanceMonitor } from '@react-three/drei';\nimport CanvasLoader from \"../widgets/CanvasLoader.jsx\";\n\n// Custom hook to detect the user's operating system\nconst useOperatingSystem = () => {\n    const [os, setOs] = React.useState('unknown');\n\n    React.useEffect(() => {\n        const userAgent = window.navigator.userAgent;\n        if (userAgent.includes('Win')) setOs('windows');\n        else if (userAgent.includes('Mac')) setOs('mac');\n    }, []);\n\n    return os;\n};\n\n// Memoized MacModel component\nconst MacModel = React.memo(() => {\n    const { scene } = useGLTF(`${process.env.PUBLIC_URL}/pc-bake.glb`);\n\n    // Memoized positions and rotations\n    const modelPosition = useMemo(() => [3, -2.8, 5.5], []);\n    const modelRotation = useMemo(() => [0, -Math.PI / 2, -3.8 * (Math.PI / 180)], []);\n    const iframePosition = useMemo(() => [0, 0.25, 4.4], []);\n\n    const os = useOperatingSystem();\n\n    useEffect(() => {\n        scene.traverse((child) => {\n            if (child.isMesh) {\n                child.castShadow = false;\n                child.receiveShadow = false;\n            }\n        });\n    }, [scene]);\n\n\n    return (\n        <>\n            {/* Original ambient light */}\n            <ambientLight intensity={4} color={\"#ffffff\"} />\n\n            {/* Mac model */}\n            <group position={modelPosition} rotation={modelRotation}>\n                <primitive object={scene} scale={1} />\n            </group>\n\n            {/* iFrame content */}\n            <group position={iframePosition}>\n                <Html\n                    transform\n                    wrapperClass=\"webgl-iframe-wrapper\"\n                    distanceFactor={1.64}\n                    occlude\n                >\n                    <iframe\n                        title=\"iframe-pc\"\n                        className={`webgl-iframe webgl-iframe-${os}`}\n                        sandbox=\"allow-scripts allow-same-origin\"\n                        loading=\"lazy\"\n                        src=\"https://mikalasa.github.io/ProfileWeb-Iframe-About/\"\n                    />\n                </Html>\n            </group>\n        </>\n    );\n});\n\n// Preload the GLTF model to improve loading times\nuseGLTF.preload(`${process.env.PUBLIC_URL}/pc.glb`);\n\n// Main WebglPc component\nconst WebglPc = () => {\n    return (\n        <div className=\"pc-bg\">\n            <Canvas\n                shadows={false}\n                dpr={[1, 1.5]}\n                camera={{ position: [0, 0, 15], fov: 25 }}\n                gl={{ antialias: true }}\n            >\n                {/* Performance monitor to adjust settings based on device capability */}\n                <PerformanceMonitor />\n\n                {/* Suspense for lazy loading */}\n                <Suspense fallback={<CanvasLoader />}>\n                    {/* PresentationControls with your original values */}\n                    <PresentationControls\n                        snap\n                        config={{ tension: 120, friction: 20 }}\n                        azimuth={[(-20 * Math.PI) / 180, (20 * Math.PI) / 180]}\n                        polar={[(-5 * Math.PI) / 180, (15 * Math.PI) / 180]}\n                    >\n                        <MacModel />\n                    </PresentationControls>\n                </Suspense>\n\n                {/* Preload all assets */}\n                <Preload all />\n            </Canvas>\n        </div>\n    );\n};\n\nexport default WebglPc;\n","import {Html} from \"@react-three/drei\";\nimport {Canvas} from \"@react-three/fiber\";\nimport React, {useEffect, useRef, useState} from \"react\";\n\nfunction Flat() {\n    const mockupImage = process.env.PUBLIC_URL + '/mockup_iphone.png';\n    const imgRef = useRef(null);\n    const [iframeHeight, setIframeHeight] = useState(0);\n\n    useEffect(() => {\n        function updateIframeHeight() {\n            if (imgRef.current) {\n                const imgHeight = imgRef.current.clientHeight;\n                setIframeHeight(imgHeight * 0.95);\n            }\n        }\n\n        window.addEventListener('resize', updateIframeHeight);\n        return () => {\n            window.removeEventListener('resize', updateIframeHeight);\n        };\n    }, []);\n\n    function handleImageLoad() {\n        if (imgRef.current) {\n            const imgHeight = imgRef.current.clientHeight;\n            setIframeHeight(imgHeight * 0.95);\n        }\n    }\n\n    return (\n    <div className=\"flat-bg\">\n        <Canvas>\n            <Html\n                wrapperClass=\"webgl-iframe-wrapper\"\n            >\n                <div className=\"iframe-flat-container\">\n                    <img\n                        ref={imgRef}\n                        src={mockupImage}\n                        alt=\"Device mockup\"\n                        className=\"mockup-image\"\n                        onLoad={handleImageLoad}\n                    />\n                    <iframe\n                        title={\"iframe-flat\"}\n                        className=\"webgl-iframe-flat\"\n                        src=\"https://mikalasa.github.io/ProfileWeb-Iframe-About/\"\n                        style={{ height: `${iframeHeight}px` }}\n                    />\n                </div>\n            </Html>\n        </Canvas>\n    </div>\n  );\n}\n\nexport default Flat;","import {isMobile} from \"react-device-detect\";\nimport WebglPc from \"../canvas/WebglPc.jsx\";\nimport Flat from \"../canvas/Flat.jsx\";\nimport {useEffect, useRef, useState} from \"react\";\n\nfunction About() {\n    useEffect(() => {\n        setTimeout(() => window.scrollTo(0, 0), 100);\n    }, []);\n    const [loadWebglPc, setLoadWebglPc] = useState(false);\n    const webglPcRef = useRef(null);\n\n    useEffect(() => {\n        const observer = new IntersectionObserver(\n            (entries) => {\n                if (entries[0].isIntersecting) {\n                    setLoadWebglPc(true);\n                    observer.unobserve(webglPcRef.current);\n                }\n            },\n            { threshold: 0.1 }\n        );\n        if (webglPcRef.current) {\n            observer.observe(webglPcRef.current);\n        }\n\n        return () => observer.disconnect();\n    }, []);\n    return (\n        <section id=\"about\" ref={webglPcRef} className=\"about-container layout-container\">\n            {!isMobile && loadWebglPc ? <WebglPc/> : loadWebglPc && <Flat/>}\n        </section>\n    );\n}\n\nexport default About;","import { Html, useProgress } from \"@react-three/drei\";\n\nconst CanvasLoader = () => {\n    const { progress } = useProgress();\n    return (\n        <Html\n            as='div'\n            center\n            style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                flexDirection: \"column\",\n            }}\n        >\n            <span className='canvas-loader'></span>\n            <p\n                style={{\n                    fontSize: 14,\n                    color: \"#F1F1F1\",\n                    fontWeight: 800,\n                    marginTop: 40,\n                }}\n            >\n                {progress.toFixed(2)}%\n            </p>\n        </Html>\n    );\n};\n\nexport default CanvasLoader;\n"],"names":["MacModel","React","scene","useGLTF","concat","process","modelPosition","useMemo","modelRotation","Math","PI","iframePosition","os","useOperatingSystem","setOs","userAgent","window","navigator","includes","useEffect","traverse","child","isMesh","castShadow","receiveShadow","_jsxs","_Fragment","children","_jsx","intensity","color","position","rotation","object","scale","Html","transform","wrapperClass","distanceFactor","occlude","title","className","sandbox","loading","src","preload","WebglPc","Canvas","shadows","dpr","camera","fov","gl","antialias","PerformanceMonitor","Suspense","fallback","CanvasLoader","PresentationControls","snap","config","tension","friction","azimuth","polar","Preload","all","imgRef","useRef","iframeHeight","setIframeHeight","useState","updateIframeHeight","current","imgHeight","clientHeight","addEventListener","removeEventListener","ref","alt","onLoad","style","height","setTimeout","scrollTo","loadWebglPc","setLoadWebglPc","webglPcRef","observer","IntersectionObserver","entries","isIntersecting","unobserve","threshold","observe","disconnect","id","isMobile","Flat","progress","useProgress","as","center","display","justifyContent","alignItems","flexDirection","fontSize","fontWeight","marginTop","toFixed"],"sourceRoot":""}