{"version":3,"file":"static/js/202.03d7a7e2.chunk.js","mappings":"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","sources":["../node_modules/react-merge-refs/src/index.tsx","../node_modules/@react-three/drei/core/Float.js","../node_modules/src/controls/OrbitControls.ts","../node_modules/@react-three/drei/core/OrbitControls.js","component/canvas/TheThinker.jsx","component/widgets/MouseScrollicon.jsx","component/widgets/HeroCard.jsx","component/widgets/HeroCard_Mobile.jsx","component/layout/Hero.jsx","component/widgets/CanvasLoader.jsx"],"sourcesContent":["import * as React from \"react\";\n\nexport default function mergeRefs<T = any>(\n  refs: Array<React.MutableRefObject<T> | React.LegacyRef<T>>\n): React.RefCallback<T> {\n  return (value) => {\n    refs.forEach((ref) => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        (ref as React.MutableRefObject<T | null>).current = value;\n      }\n    });\n  };\n}\n","import * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport * as THREE from 'three';\n\nconst Float = /* @__PURE__ */React.forwardRef(({\n  children,\n  enabled = true,\n  speed = 1,\n  rotationIntensity = 1,\n  floatIntensity = 1,\n  floatingRange = [-0.1, 0.1],\n  ...props\n}, forwardRef) => {\n  const ref = React.useRef(null);\n  const offset = React.useRef(Math.random() * 10000);\n  useFrame(state => {\n    var _floatingRange$, _floatingRange$2;\n    if (!enabled || speed === 0) return;\n    const t = offset.current + state.clock.getElapsedTime();\n    ref.current.rotation.x = Math.cos(t / 4 * speed) / 8 * rotationIntensity;\n    ref.current.rotation.y = Math.sin(t / 4 * speed) / 8 * rotationIntensity;\n    ref.current.rotation.z = Math.sin(t / 4 * speed) / 20 * rotationIntensity;\n    let yPosition = Math.sin(t / 4 * speed) / 10;\n    yPosition = THREE.MathUtils.mapLinear(yPosition, -0.1, 0.1, (_floatingRange$ = floatingRange == null ? void 0 : floatingRange[0]) !== null && _floatingRange$ !== void 0 ? _floatingRange$ : -0.1, (_floatingRange$2 = floatingRange == null ? void 0 : floatingRange[1]) !== null && _floatingRange$2 !== void 0 ? _floatingRange$2 : 0.1);\n    ref.current.position.y = yPosition * floatIntensity;\n    ref.current.updateMatrix();\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\n    ref: mergeRefs([ref, forwardRef]),\n    matrixAutoUpdate: false\n  }, children));\n});\n\nexport { Float };\n","import {\n  EventDispatcher,\n  Matrix4,\n  MOUSE,\n  OrthographicCamera,\n  PerspectiveCamera,\n  Quaternion,\n  Spherical,\n  TOUCH,\n  Vector2,\n  Vector3,\n  Ray,\n  Plane,\n} from 'three'\n\nconst _ray = new Ray()\nconst _plane = new Plane()\nconst TILT_LIMIT = Math.cos(70 * (Math.PI / 180))\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst moduloWrapAround = (offset: number, capacity: number) => ((offset % capacity) + capacity) % capacity\n\nclass OrbitControls extends EventDispatcher {\n  object: PerspectiveCamera | OrthographicCamera\n  domElement: HTMLElement | undefined\n  // Set to false to disable this control\n  enabled = true\n  // \"target\" sets the location of focus, where the object orbits around\n  target = new Vector3()\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  minDistance = 0\n  maxDistance = Infinity\n  // How far you can zoom in and out ( OrthographicCamera only )\n  minZoom = 0\n  maxZoom = Infinity\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  minPolarAngle = 0 // radians\n  maxPolarAngle = Math.PI // radians\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n  minAzimuthAngle = -Infinity // radians\n  maxAzimuthAngle = Infinity // radians\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  enableDamping = false\n  dampingFactor = 0.05\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  enableZoom = true\n  zoomSpeed = 1.0\n  // Set to false to disable rotating\n  enableRotate = true\n  rotateSpeed = 1.0\n  // Set to false to disable panning\n  enablePan = true\n  panSpeed = 1.0\n  screenSpacePanning = true // if false, pan orthogonal to world-space direction camera.up\n  keyPanSpeed = 7.0 // pixels moved per arrow key push\n  zoomToCursor = false\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  autoRotate = false\n  autoRotateSpeed = 2.0 // 30 seconds per orbit when fps is 60\n  reverseOrbit = false // true if you want to reverse the orbit to mouse drag from left to right = orbits left\n  reverseHorizontalOrbit = false // true if you want to reverse the horizontal orbit direction\n  reverseVerticalOrbit = false // true if you want to reverse the vertical orbit direction\n  // The four arrow keys\n  keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' }\n  // Mouse buttons\n  mouseButtons: Partial<{\n    LEFT: MOUSE\n    MIDDLE: MOUSE\n    RIGHT: MOUSE\n  }> = {\n    LEFT: MOUSE.ROTATE,\n    MIDDLE: MOUSE.DOLLY,\n    RIGHT: MOUSE.PAN,\n  }\n  // Touch fingers\n  touches: Partial<{\n    ONE: TOUCH\n    TWO: TOUCH\n  }> = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN }\n  target0: Vector3\n  position0: Vector3\n  zoom0: number\n  // the target DOM element for key events\n  _domElementKeyEvents: any = null\n\n  getPolarAngle: () => number\n  getAzimuthalAngle: () => number\n  setPolarAngle: (x: number) => void\n  setAzimuthalAngle: (x: number) => void\n  getDistance: () => number\n\n  listenToKeyEvents: (domElement: HTMLElement) => void\n  stopListenToKeyEvents: () => void\n  saveState: () => void\n  reset: () => void\n  update: () => void\n  connect: (domElement: HTMLElement) => void\n  dispose: () => void\n\n  constructor(object: PerspectiveCamera | OrthographicCamera, domElement?: HTMLElement) {\n    super()\n\n    this.object = object\n    this.domElement = domElement\n\n    // for reset\n    this.target0 = this.target.clone()\n    this.position0 = this.object.position.clone()\n    this.zoom0 = this.object.zoom\n\n    //\n    // public methods\n    //\n\n    this.getPolarAngle = (): number => spherical.phi\n\n    this.getAzimuthalAngle = (): number => spherical.theta\n\n    this.setPolarAngle = (value: number): void => {\n      // use modulo wrapping to safeguard value\n      let phi = moduloWrapAround(value, 2 * Math.PI)\n      let currentPhi = spherical.phi\n\n      // convert to the equivalent shortest angle\n      if (currentPhi < 0) currentPhi += 2 * Math.PI\n      if (phi < 0) phi += 2 * Math.PI\n      let phiDist = Math.abs(phi - currentPhi)\n      if (2 * Math.PI - phiDist < phiDist) {\n        if (phi < currentPhi) {\n          phi += 2 * Math.PI\n        } else {\n          currentPhi += 2 * Math.PI\n        }\n      }\n      sphericalDelta.phi = phi - currentPhi\n      scope.update()\n    }\n\n    this.setAzimuthalAngle = (value: number): void => {\n      // use modulo wrapping to safeguard value\n      let theta = moduloWrapAround(value, 2 * Math.PI)\n      let currentTheta = spherical.theta\n\n      // convert to the equivalent shortest angle\n      if (currentTheta < 0) currentTheta += 2 * Math.PI\n      if (theta < 0) theta += 2 * Math.PI\n      let thetaDist = Math.abs(theta - currentTheta)\n      if (2 * Math.PI - thetaDist < thetaDist) {\n        if (theta < currentTheta) {\n          theta += 2 * Math.PI\n        } else {\n          currentTheta += 2 * Math.PI\n        }\n      }\n      sphericalDelta.theta = theta - currentTheta\n      scope.update()\n    }\n\n    this.getDistance = (): number => scope.object.position.distanceTo(scope.target)\n\n    this.listenToKeyEvents = (domElement: HTMLElement): void => {\n      domElement.addEventListener('keydown', onKeyDown)\n      this._domElementKeyEvents = domElement\n    }\n\n    this.stopListenToKeyEvents = (): void => {\n      this._domElementKeyEvents.removeEventListener('keydown', onKeyDown)\n      this._domElementKeyEvents = null\n    }\n\n    this.saveState = (): void => {\n      scope.target0.copy(scope.target)\n      scope.position0.copy(scope.object.position)\n      scope.zoom0 = scope.object.zoom\n    }\n\n    this.reset = (): void => {\n      scope.target.copy(scope.target0)\n      scope.object.position.copy(scope.position0)\n      scope.object.zoom = scope.zoom0\n      scope.object.updateProjectionMatrix()\n\n      // @ts-ignore\n      scope.dispatchEvent(changeEvent)\n\n      scope.update()\n\n      state = STATE.NONE\n    }\n\n    // this method is exposed, but perhaps it would be better if we can make it private...\n    this.update = ((): (() => void) => {\n      const offset = new Vector3()\n      const up = new Vector3(0, 1, 0)\n\n      // so camera.up is the orbit axis\n      const quat = new Quaternion().setFromUnitVectors(object.up, up)\n      const quatInverse = quat.clone().invert()\n\n      const lastPosition = new Vector3()\n      const lastQuaternion = new Quaternion()\n\n      const twoPI = 2 * Math.PI\n\n      return function update(): boolean {\n        const position = scope.object.position\n\n        // update new up direction\n        quat.setFromUnitVectors(object.up, up)\n        quatInverse.copy(quat).invert()\n\n        offset.copy(position).sub(scope.target)\n\n        // rotate offset to \"y-axis-is-up\" space\n        offset.applyQuaternion(quat)\n\n        // angle from z-axis around y-axis\n        spherical.setFromVector3(offset)\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle())\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor\n        } else {\n          spherical.theta += sphericalDelta.theta\n          spherical.phi += sphericalDelta.phi\n        }\n\n        // restrict theta to be between desired limits\n\n        let min = scope.minAzimuthAngle\n        let max = scope.maxAzimuthAngle\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI\n          else if (min > Math.PI) min -= twoPI\n\n          if (max < -Math.PI) max += twoPI\n          else if (max > Math.PI) max -= twoPI\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta))\n          } else {\n            spherical.theta =\n              spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta)\n          }\n        }\n\n        // restrict phi to be between desired limits\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi))\n        spherical.makeSafe()\n\n        // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor)\n        } else {\n          scope.target.add(panOffset)\n        }\n\n        // adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n        // we adjust zoom later in these cases\n        if (\n          (scope.zoomToCursor && performCursorZoom) ||\n          (scope.object as THREE.OrthographicCamera).isOrthographicCamera\n        ) {\n          spherical.radius = clampDistance(spherical.radius)\n        } else {\n          spherical.radius = clampDistance(spherical.radius * scale)\n        }\n\n        offset.setFromSpherical(spherical)\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        offset.applyQuaternion(quatInverse)\n\n        position.copy(scope.target).add(offset)\n\n        if (!scope.object.matrixAutoUpdate) scope.object.updateMatrix()\n        scope.object.lookAt(scope.target)\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor\n          sphericalDelta.phi *= 1 - scope.dampingFactor\n\n          panOffset.multiplyScalar(1 - scope.dampingFactor)\n        } else {\n          sphericalDelta.set(0, 0, 0)\n\n          panOffset.set(0, 0, 0)\n        }\n\n        // adjust camera position\n        let zoomChanged = false\n        if (scope.zoomToCursor && performCursorZoom) {\n          let newRadius = null\n          if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n            // move the camera down the pointer ray\n            // this method avoids floating point error\n            const prevRadius = offset.length()\n            newRadius = clampDistance(prevRadius * scale)\n\n            const radiusDelta = prevRadius - newRadius\n            scope.object.position.addScaledVector(dollyDirection, radiusDelta)\n            scope.object.updateMatrixWorld()\n          } else if ((scope.object as THREE.OrthographicCamera).isOrthographicCamera) {\n            // adjust the ortho camera position based on zoom changes\n            const mouseBefore = new Vector3(mouse.x, mouse.y, 0)\n            mouseBefore.unproject(scope.object)\n\n            scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / scale))\n            scope.object.updateProjectionMatrix()\n            zoomChanged = true\n\n            const mouseAfter = new Vector3(mouse.x, mouse.y, 0)\n            mouseAfter.unproject(scope.object)\n\n            scope.object.position.sub(mouseAfter).add(mouseBefore)\n            scope.object.updateMatrixWorld()\n\n            newRadius = offset.length()\n          } else {\n            console.warn('WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.')\n            scope.zoomToCursor = false\n          }\n\n          // handle the placement of the target\n          if (newRadius !== null) {\n            if (scope.screenSpacePanning) {\n              // position the orbit target in front of the new camera position\n              scope.target\n                .set(0, 0, -1)\n                .transformDirection(scope.object.matrix)\n                .multiplyScalar(newRadius)\n                .add(scope.object.position)\n            } else {\n              // get the ray and translation plane to compute target\n              _ray.origin.copy(scope.object.position)\n              _ray.direction.set(0, 0, -1).transformDirection(scope.object.matrix)\n\n              // if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n              // extremely large values\n              if (Math.abs(scope.object.up.dot(_ray.direction)) < TILT_LIMIT) {\n                object.lookAt(scope.target)\n              } else {\n                _plane.setFromNormalAndCoplanarPoint(scope.object.up, scope.target)\n                _ray.intersectPlane(_plane, scope.target)\n              }\n            }\n          }\n        } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          zoomChanged = scale !== 1\n\n          if (zoomChanged) {\n            scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / scale))\n            scope.object.updateProjectionMatrix()\n          }\n        }\n\n        scale = 1\n        performCursorZoom = false\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (\n          zoomChanged ||\n          lastPosition.distanceToSquared(scope.object.position) > EPS ||\n          8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n        ) {\n          // @ts-ignore\n          scope.dispatchEvent(changeEvent)\n\n          lastPosition.copy(scope.object.position)\n          lastQuaternion.copy(scope.object.quaternion)\n          zoomChanged = false\n\n          return true\n        }\n\n        return false\n      }\n    })()\n\n    // https://github.com/mrdoob/three.js/issues/20575\n    this.connect = (domElement: HTMLElement): void => {\n      if ((domElement as any) === document) {\n        console.error(\n          'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.',\n        )\n      }\n      scope.domElement = domElement\n      // disables touch scroll\n      // touch-action needs to be defined for pointer events to work on mobile\n      // https://stackoverflow.com/a/48254578\n      scope.domElement.style.touchAction = 'none'\n      scope.domElement.addEventListener('contextmenu', onContextMenu)\n      scope.domElement.addEventListener('pointerdown', onPointerDown)\n      scope.domElement.addEventListener('pointercancel', onPointerCancel)\n      scope.domElement.addEventListener('wheel', onMouseWheel)\n    }\n\n    this.dispose = (): void => {\n      scope.domElement?.removeEventListener('contextmenu', onContextMenu)\n      scope.domElement?.removeEventListener('pointerdown', onPointerDown)\n      scope.domElement?.removeEventListener('pointercancel', onPointerCancel)\n      scope.domElement?.removeEventListener('wheel', onMouseWheel)\n      scope.domElement?.ownerDocument.removeEventListener('pointermove', onPointerMove)\n      scope.domElement?.ownerDocument.removeEventListener('pointerup', onPointerUp)\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown)\n      }\n      //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    }\n\n    //\n    // internals\n    //\n\n    const scope = this\n\n    const changeEvent = { type: 'change' }\n    const startEvent = { type: 'start' }\n    const endEvent = { type: 'end' }\n\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6,\n    }\n\n    let state = STATE.NONE\n\n    const EPS = 0.000001\n\n    // current position in spherical coordinates\n    const spherical = new Spherical()\n    const sphericalDelta = new Spherical()\n\n    let scale = 1\n    const panOffset = new Vector3()\n\n    const rotateStart = new Vector2()\n    const rotateEnd = new Vector2()\n    const rotateDelta = new Vector2()\n\n    const panStart = new Vector2()\n    const panEnd = new Vector2()\n    const panDelta = new Vector2()\n\n    const dollyStart = new Vector2()\n    const dollyEnd = new Vector2()\n    const dollyDelta = new Vector2()\n\n    const dollyDirection = new Vector3()\n    const mouse = new Vector2()\n    let performCursorZoom = false\n\n    const pointers: PointerEvent[] = []\n    const pointerPositions: { [key: string]: Vector2 } = {}\n\n    function getAutoRotationAngle(): number {\n      return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed\n    }\n\n    function getZoomScale(): number {\n      return Math.pow(0.95, scope.zoomSpeed)\n    }\n\n    function rotateLeft(angle: number): void {\n      if (scope.reverseOrbit || scope.reverseHorizontalOrbit) {\n        sphericalDelta.theta += angle\n      } else {\n        sphericalDelta.theta -= angle\n      }\n    }\n\n    function rotateUp(angle: number): void {\n      if (scope.reverseOrbit || scope.reverseVerticalOrbit) {\n        sphericalDelta.phi += angle\n      } else {\n        sphericalDelta.phi -= angle\n      }\n    }\n\n    const panLeft = (() => {\n      const v = new Vector3()\n\n      return function panLeft(distance: number, objectMatrix: Matrix4) {\n        v.setFromMatrixColumn(objectMatrix, 0) // get X column of objectMatrix\n        v.multiplyScalar(-distance)\n\n        panOffset.add(v)\n      }\n    })()\n\n    const panUp = (() => {\n      const v = new Vector3()\n\n      return function panUp(distance: number, objectMatrix: Matrix4) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1)\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0)\n          v.crossVectors(scope.object.up, v)\n        }\n\n        v.multiplyScalar(distance)\n\n        panOffset.add(v)\n      }\n    })()\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    const pan = (() => {\n      const offset = new Vector3()\n\n      return function pan(deltaX: number, deltaY: number) {\n        const element = scope.domElement\n\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position\n          offset.copy(position).sub(scope.target)\n          let targetDistance = offset.length()\n\n          // half of the fov is center to top of screen\n          targetDistance *= Math.tan(((scope.object.fov / 2) * Math.PI) / 180.0)\n\n          // we use only clientHeight here so aspect ratio does not distort speed\n          panLeft((2 * deltaX * targetDistance) / element.clientHeight, scope.object.matrix)\n          panUp((2 * deltaY * targetDistance) / element.clientHeight, scope.object.matrix)\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(\n            (deltaX * (scope.object.right - scope.object.left)) / scope.object.zoom / element.clientWidth,\n            scope.object.matrix,\n          )\n          panUp(\n            (deltaY * (scope.object.top - scope.object.bottom)) / scope.object.zoom / element.clientHeight,\n            scope.object.matrix,\n          )\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.')\n          scope.enablePan = false\n        }\n      }\n    })()\n\n    function dollyOut(dollyScale: number) {\n      if (\n        (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) ||\n        (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera)\n      ) {\n        scale /= dollyScale\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.')\n        scope.enableZoom = false\n      }\n    }\n\n    function dollyIn(dollyScale: number) {\n      if (\n        (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) ||\n        (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera)\n      ) {\n        scale *= dollyScale\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.')\n        scope.enableZoom = false\n      }\n    }\n\n    function updateMouseParameters(event: MouseEvent): void {\n      if (!scope.zoomToCursor || !scope.domElement) {\n        return\n      }\n\n      performCursorZoom = true\n\n      const rect = scope.domElement.getBoundingClientRect()\n      const x = event.clientX - rect.left\n      const y = event.clientY - rect.top\n      const w = rect.width\n      const h = rect.height\n\n      mouse.x = (x / w) * 2 - 1\n      mouse.y = -(y / h) * 2 + 1\n\n      dollyDirection.set(mouse.x, mouse.y, 1).unproject(scope.object).sub(scope.object.position).normalize()\n    }\n\n    function clampDistance(dist: number): number {\n      return Math.max(scope.minDistance, Math.min(scope.maxDistance, dist))\n    }\n\n    //\n    // event callbacks - update the object state\n    //\n\n    function handleMouseDownRotate(event: MouseEvent) {\n      rotateStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseDownDolly(event: MouseEvent) {\n      updateMouseParameters(event)\n      dollyStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseDownPan(event: MouseEvent) {\n      panStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseMoveRotate(event: MouseEvent) {\n      rotateEnd.set(event.clientX, event.clientY)\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed)\n\n      const element = scope.domElement\n\n      if (element) {\n        rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight) // yes, height\n        rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight)\n      }\n      rotateStart.copy(rotateEnd)\n      scope.update()\n    }\n\n    function handleMouseMoveDolly(event: MouseEvent) {\n      dollyEnd.set(event.clientX, event.clientY)\n      dollyDelta.subVectors(dollyEnd, dollyStart)\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale())\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale())\n      }\n\n      dollyStart.copy(dollyEnd)\n      scope.update()\n    }\n\n    function handleMouseMovePan(event: MouseEvent) {\n      panEnd.set(event.clientX, event.clientY)\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed)\n      pan(panDelta.x, panDelta.y)\n      panStart.copy(panEnd)\n      scope.update()\n    }\n\n    function handleMouseWheel(event: WheelEvent) {\n      updateMouseParameters(event)\n\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale())\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale())\n      }\n\n      scope.update()\n    }\n\n    function handleKeyDown(event: KeyboardEvent) {\n      let needsUpdate = false\n\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed)\n          needsUpdate = true\n          break\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed)\n          needsUpdate = true\n          break\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0)\n          needsUpdate = true\n          break\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0)\n          needsUpdate = true\n          break\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault()\n        scope.update()\n      }\n    }\n\n    function handleTouchStartRotate() {\n      if (pointers.length == 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY)\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX)\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY)\n\n        rotateStart.set(x, y)\n      }\n    }\n\n    function handleTouchStartPan() {\n      if (pointers.length == 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY)\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX)\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY)\n\n        panStart.set(x, y)\n      }\n    }\n\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX\n      const dy = pointers[0].pageY - pointers[1].pageY\n      const distance = Math.sqrt(dx * dx + dy * dy)\n\n      dollyStart.set(0, distance)\n    }\n\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly()\n      if (scope.enablePan) handleTouchStartPan()\n    }\n\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly()\n      if (scope.enableRotate) handleTouchStartRotate()\n    }\n\n    function handleTouchMoveRotate(event: PointerEvent) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY)\n      } else {\n        const position = getSecondPointerPosition(event)\n        const x = 0.5 * (event.pageX + position.x)\n        const y = 0.5 * (event.pageY + position.y)\n        rotateEnd.set(x, y)\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed)\n\n      const element = scope.domElement\n\n      if (element) {\n        rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight) // yes, height\n        rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight)\n      }\n      rotateStart.copy(rotateEnd)\n    }\n\n    function handleTouchMovePan(event: PointerEvent) {\n      if (pointers.length == 1) {\n        panEnd.set(event.pageX, event.pageY)\n      } else {\n        const position = getSecondPointerPosition(event)\n        const x = 0.5 * (event.pageX + position.x)\n        const y = 0.5 * (event.pageY + position.y)\n        panEnd.set(x, y)\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed)\n      pan(panDelta.x, panDelta.y)\n      panStart.copy(panEnd)\n    }\n\n    function handleTouchMoveDolly(event: PointerEvent) {\n      const position = getSecondPointerPosition(event)\n      const dx = event.pageX - position.x\n      const dy = event.pageY - position.y\n      const distance = Math.sqrt(dx * dx + dy * dy)\n\n      dollyEnd.set(0, distance)\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed))\n      dollyOut(dollyDelta.y)\n      dollyStart.copy(dollyEnd)\n    }\n\n    function handleTouchMoveDollyPan(event: PointerEvent) {\n      if (scope.enableZoom) handleTouchMoveDolly(event)\n      if (scope.enablePan) handleTouchMovePan(event)\n    }\n\n    function handleTouchMoveDollyRotate(event: PointerEvent) {\n      if (scope.enableZoom) handleTouchMoveDolly(event)\n      if (scope.enableRotate) handleTouchMoveRotate(event)\n    }\n\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n    function onPointerDown(event: PointerEvent) {\n      if (scope.enabled === false) return\n\n      if (pointers.length === 0) {\n        scope.domElement?.ownerDocument.addEventListener('pointermove', onPointerMove)\n        scope.domElement?.ownerDocument.addEventListener('pointerup', onPointerUp)\n      }\n\n      addPointer(event)\n\n      if (event.pointerType === 'touch') {\n        onTouchStart(event)\n      } else {\n        onMouseDown(event)\n      }\n    }\n\n    function onPointerMove(event: PointerEvent) {\n      if (scope.enabled === false) return\n\n      if (event.pointerType === 'touch') {\n        onTouchMove(event)\n      } else {\n        onMouseMove(event)\n      }\n    }\n\n    function onPointerUp(event: PointerEvent) {\n      removePointer(event)\n\n      if (pointers.length === 0) {\n        scope.domElement?.releasePointerCapture(event.pointerId)\n\n        scope.domElement?.ownerDocument.removeEventListener('pointermove', onPointerMove)\n        scope.domElement?.ownerDocument.removeEventListener('pointerup', onPointerUp)\n      }\n\n      // @ts-ignore\n      scope.dispatchEvent(endEvent)\n\n      state = STATE.NONE\n    }\n\n    function onPointerCancel(event: PointerEvent) {\n      removePointer(event)\n    }\n\n    function onMouseDown(event: MouseEvent) {\n      let mouseAction\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT\n          break\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE\n          break\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT\n          break\n\n        default:\n          mouseAction = -1\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return\n          handleMouseDownDolly(event)\n          state = STATE.DOLLY\n          break\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return\n            handleMouseDownPan(event)\n            state = STATE.PAN\n          } else {\n            if (scope.enableRotate === false) return\n            handleMouseDownRotate(event)\n            state = STATE.ROTATE\n          }\n          break\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return\n            handleMouseDownRotate(event)\n            state = STATE.ROTATE\n          } else {\n            if (scope.enablePan === false) return\n            handleMouseDownPan(event)\n            state = STATE.PAN\n          }\n          break\n\n        default:\n          state = STATE.NONE\n      }\n\n      if (state !== STATE.NONE) {\n        // @ts-ignore\n        scope.dispatchEvent(startEvent)\n      }\n    }\n\n    function onMouseMove(event: MouseEvent) {\n      if (scope.enabled === false) return\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return\n          handleMouseMoveRotate(event)\n          break\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return\n          handleMouseMoveDolly(event)\n          break\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return\n          handleMouseMovePan(event)\n          break\n      }\n    }\n\n    function onMouseWheel(event: WheelEvent) {\n      if (scope.enabled === false || scope.enableZoom === false || (state !== STATE.NONE && state !== STATE.ROTATE)) {\n        return\n      }\n\n      event.preventDefault()\n\n      // @ts-ignore\n      scope.dispatchEvent(startEvent)\n\n      handleMouseWheel(event)\n\n      // @ts-ignore\n      scope.dispatchEvent(endEvent)\n    }\n\n    function onKeyDown(event: KeyboardEvent) {\n      if (scope.enabled === false || scope.enablePan === false) return\n      handleKeyDown(event)\n    }\n\n    function onTouchStart(event: PointerEvent) {\n      trackPointer(event)\n\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return\n              handleTouchStartRotate()\n              state = STATE.TOUCH_ROTATE\n              break\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return\n              handleTouchStartPan()\n              state = STATE.TOUCH_PAN\n              break\n\n            default:\n              state = STATE.NONE\n          }\n\n          break\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return\n              handleTouchStartDollyPan()\n              state = STATE.TOUCH_DOLLY_PAN\n              break\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return\n              handleTouchStartDollyRotate()\n              state = STATE.TOUCH_DOLLY_ROTATE\n              break\n\n            default:\n              state = STATE.NONE\n          }\n\n          break\n\n        default:\n          state = STATE.NONE\n      }\n\n      if (state !== STATE.NONE) {\n        // @ts-ignore\n        scope.dispatchEvent(startEvent)\n      }\n    }\n\n    function onTouchMove(event: PointerEvent) {\n      trackPointer(event)\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return\n          handleTouchMoveRotate(event)\n          scope.update()\n          break\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return\n          handleTouchMovePan(event)\n          scope.update()\n          break\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return\n          handleTouchMoveDollyPan(event)\n          scope.update()\n          break\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return\n          handleTouchMoveDollyRotate(event)\n          scope.update()\n          break\n\n        default:\n          state = STATE.NONE\n      }\n    }\n\n    function onContextMenu(event: Event) {\n      if (scope.enabled === false) return\n      event.preventDefault()\n    }\n\n    function addPointer(event: PointerEvent) {\n      pointers.push(event)\n    }\n\n    function removePointer(event: PointerEvent) {\n      delete pointerPositions[event.pointerId]\n\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1)\n          return\n        }\n      }\n    }\n\n    function trackPointer(event: PointerEvent) {\n      let position = pointerPositions[event.pointerId]\n\n      if (position === undefined) {\n        position = new Vector2()\n        pointerPositions[event.pointerId] = position\n      }\n\n      position.set(event.pageX, event.pageY)\n    }\n\n    function getSecondPointerPosition(event: PointerEvent) {\n      const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0]\n      return pointerPositions[pointer.pointerId]\n    }\n\n    // connect events\n    if (domElement !== undefined) this.connect(domElement)\n    // force an update at start\n    this.update()\n  }\n}\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n  constructor(object: PerspectiveCamera | OrthographicCamera, domElement?: HTMLElement) {\n    super(object, domElement)\n\n    this.screenSpacePanning = false // pan orthogonal to world-space direction camera.up\n\n    this.mouseButtons.LEFT = MOUSE.PAN\n    this.mouseButtons.RIGHT = MOUSE.ROTATE\n\n    this.touches.ONE = TOUCH.PAN\n    this.touches.TWO = TOUCH.DOLLY_ROTATE\n  }\n}\n\nexport { OrbitControls, MapControls }\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\n\nconst OrbitControls = /* @__PURE__ */React.forwardRef(({\n  makeDefault,\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  keyEvents = false,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(state => state.invalidate);\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const setEvents = useThree(state => state.setEvents);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const performance = useThree(state => state.performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  }, -1);\n  React.useEffect(() => {\n    if (keyEvents) {\n      controls.connect(keyEvents === true ? explDomElement : keyEvents);\n    }\n    controls.connect(explDomElement);\n    return () => void controls.dispose();\n  }, [keyEvents, explDomElement, regress, controls, invalidate]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n    const onStartCb = e => {\n      if (onStart) onStart(e);\n    };\n    const onEndCb = e => {\n      if (onEnd) onEnd(e);\n    };\n    controls.addEventListener('change', callback);\n    controls.addEventListener('start', onStartCb);\n    controls.addEventListener('end', onEndCb);\n    return () => {\n      controls.removeEventListener('start', onStartCb);\n      controls.removeEventListener('end', onEndCb);\n      controls.removeEventListener('change', callback);\n    };\n  }, [onChange, onStart, onEnd, controls, invalidate, setEvents]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\n\nexport { OrbitControls };\n","// TheThinkerCanvas.jsx\n\nimport React, { Suspense, useEffect, useMemo, memo } from \"react\";\nimport {Canvas, useFrame, useLoader} from \"@react-three/fiber\";\nimport { Float, OrbitControls, Preload, useGLTF } from \"@react-three/drei\";\nimport { TextureLoader } from \"three\";\nimport CanvasLoader from \"../widgets/CanvasLoader.jsx\";\nimport { isMobile } from \"react-device-detect\";\n\n// Preload the GLTF model for faster loading\nuseGLTF.preload(`${process.env.PUBLIC_URL}/the_thinker.glb`);\n\nconst ThinkerModel = memo(() => {\n    const { scene } = useGLTF(`${process.env.PUBLIC_URL}/the_thinker.glb`);\n\n    // Memoize calculations for performance\n    const scale = useMemo(() => (isMobile ? 2.5 : 3.5), []);\n    const position = useMemo(() => (isMobile ? [-1.8, 3, 10] : [-5.0, -0.5, 5]), []);\n    const rotationIndex = useMemo(() => (isMobile ? 0.25 : 1), []);\n\n    useEffect(() => {\n        if (scene) {\n            scene.traverse((child) => {\n                if (child.isMesh) {\n                    child.castShadow = true;\n                    child.receiveShadow = true;\n                }\n            });\n        }\n\n        // Clean up resources when the component unmounts\n        return () => {\n            if (scene) {\n                scene.traverse((child) => {\n                    if (child.isMesh) {\n                        child.geometry.dispose();\n                        if (Array.isArray(child.material)) {\n                            child.material.forEach((material) => material.dispose());\n                        } else {\n                            child.material.dispose();\n                        }\n                    }\n                });\n            }\n        };\n    }, [scene]);\n\n    return (\n        <>\n            {/* Original lighting setup */}\n            <ambientLight intensity={0.2} color=\"#ffffff\" />\n            <pointLight\n                intensity={10}\n                position={[-1, 5, 7]}\n                castShadow\n                shadow-mapSize-width={256}\n                shadow-mapSize-height={256}\n                shadow-radius={10}\n            />\n            <pointLight\n                intensity={20}\n                position={[-8, 6, -3]}\n                castShadow\n                shadow-mapSize-width={256}\n                shadow-mapSize-height={256}\n                shadow-radius={10}\n            />\n\n            {/* Model with original animation speed */}\n            <Float speed={1} rotationIntensity={rotationIndex}>\n                <primitive\n                    object={scene}\n                    scale={scale}\n                    position={position}\n                    rotation={[-0.3, 2.5, -0.1]}\n                />\n            </Float>\n        </>\n    );\n});\n\nconst GroundPlane = memo(() => {\n    // Use useLoader for efficient texture loading\n    const texture = useLoader(TextureLoader, `${process.env.PUBLIC_URL}/hero-ground.webp`);\n\n    return (\n        <mesh\n            rotation={[-Math.PI / 2 - 0.3, 0, -0.1]}\n            position={[0, -3, 0]}\n            receiveShadow\n            castShadow\n        >\n            <planeGeometry args={[400, 400]} />\n            <meshPhysicalMaterial map={texture} metalness={0.7} roughness={0.2} />\n        </mesh>\n    );\n});\n\nconst DynamicFrameControl = ({ children }) => {\n    const fps = 30; // Target frame rate\n    let accumDelta = 0;\n\n    useFrame((state, delta) => {\n        accumDelta += delta;\n        if (accumDelta >= 1 / fps) {\n            accumDelta %= 1 / fps; // Reset accumulated time\n            state.invalidate(); // Request a new frame\n        }\n    });\n\n    return <>{children}</>;\n};\n\nconst TheThinkerCanvas = () => {\n    const maxPolarAngle = Math.PI / 4;\n    const minPolarAngle = Math.PI / 3;\n    const minAzimuthAngle = isMobile ? -Math.PI / 12 : -Math.PI / 8;\n    const maxAzimuthAngle = isMobile ? Math.PI / 30 : Math.PI / 12;\n\n    return (\n        <div className=\"thinker-bg\">\n            <Canvas\n                shadows\n                dpr={[1, 2]} // Limit device pixel ratio for performance\n                camera={{ position: [0, 30, 0], fov: 25, near: 0.1, far: 200 }}\n                gl={{ antialias: true, alpha: false }}\n            >\n                <Suspense fallback={<CanvasLoader />}>\n                    <DynamicFrameControl>\n                        <OrbitControls\n                            enableRotate={true}\n                            enableZoom={false}\n                            maxPolarAngle={maxPolarAngle}\n                            minPolarAngle={minPolarAngle}\n                            minAzimuthAngle={minAzimuthAngle}\n                            maxAzimuthAngle={maxAzimuthAngle}\n                        />\n                        <ThinkerModel />\n                        <GroundPlane />\n                    </DynamicFrameControl>\n                </Suspense>\n                <Preload all />\n            </Canvas>\n        </div>\n    );\n};\n\nexport default TheThinkerCanvas;\n","import { motion } from 'framer-motion';\n\nfunction MouseScrollicon() {\n  return (\n      <div className='absolute xs:bottom-10 bottom-32 w-full flex justify-center items-center'>\n          <a href='#about'>\n              <div\n                  className='w-[35px] h-[64px] rounded-3xl border-4 border-secondary flex justify-center items-start p-2'>\n                  <motion.div\n                      animate={{\n                          y: [0, 24, 0],\n                      }}\n                      transition={{\n                          duration: 2,\n                          repeat: Infinity,\n                          repeatType: \"loop\",\n                      }}\n                      className='w-3 h-3 rounded-full bg-white mb-1'\n                  />\n              </div>\n          </a>\n      </div>\n  );\n}\n\nexport default MouseScrollicon;","import React, { useEffect, useRef } from \"react\";\nimport { motion } from 'framer-motion';\nimport {customTailwind} from \"../../constants/custom-tailwind\";\nimport {isMobile} from \"react-device-detect\";\nimport {heroText} from \"../../constants/config-web-paragraph\";\n\n\nfunction HeroCard() {\n    const cardRef = useRef(null);\n    const animationFrameId = useRef(null);\n\n    useEffect(() => {\n        let lastMousePosition = { x: 0, y: 0 };\n\n        const handleMouseMove = (event) => {\n            lastMousePosition = {\n                x: event.pageX,\n                y: event.pageY,\n            };\n\n            if (!animationFrameId.current) {\n                animationFrameId.current = requestAnimationFrame(() => {\n                    updateCardRotation(lastMousePosition);\n                    animationFrameId.current = null;\n                });\n            }\n        };\n\n        const updateCardRotation = ({ x, y }) => {\n            const e = -(window.innerWidth / 2 - x) / 30;\n            const n = (window.innerHeight / 2 - y) / 30;\n\n            if (cardRef.current) {\n                cardRef.current.style.transform = `rotateY(${e}deg) rotateX(${n}deg)`;\n            }\n        };\n\n        // const topElement = document.getElementById(\"hero-card-bg\");\n        const topElement = document.querySelector(\".hero-container\");\n\n        topElement.addEventListener(\"mousemove\", handleMouseMove);\n\n        // remove event listener and animation frame\n        return () => {\n            topElement.removeEventListener(\"mousemove\", handleMouseMove);\n            if (animationFrameId.current) {\n                cancelAnimationFrame(animationFrameId.current);\n            }\n        };\n    }, []);\n\n    const isMobileCanvasCoverDiv = (\n        <>\n            <div className=\"isMobileCanvasCoverDiv-right\"></div>\n            <div className=\"isMobileCanvasCoverDiv-buttom\"></div>\n        </>\n    )\n\n    return (\n        <motion.div\n            id=\"hero-card-bg\"\n            className={` ${customTailwind.paddingX} flex flex-row items-start gap-5`}\n            initial={{opacity: 0, scale: 0.5}}\n            animate={{opacity: 1, scale: 1}}\n            transition={{duration: 5, type: 'spring', damping: 10, stiffness: 100}}\n        >\n            <div>\n                <div id=\"hero-card-top\">\n                    <div\n                        className=\"hero-card\"\n                        ref={cardRef}\n                    >\n                        <div className=\"hero-card-thumb\"></div>\n                        <div className='hero-card-title flex flex-col justify-center items-center mt-5'>\n                            <div className='w-5 h-5 rounded-full bg-[#FF7F50]'/>\n                            <div className='w-1 sm:h-80 h-40 violet-gradient'/>\n                        </div>\n                        <motion.div className={\"hero-card-des\"}>\n                            <h1 className={`${customTailwind.heroHeadText} text-white`}>{heroText.title_f}\n                                <span className='text-[#FF7F50]'>{heroText.title_l}</span>\n                            </h1>\n                            <br/>\n                            <p className={`${customTailwind.heroSubText} mt-2 text-white-100`}>\n                                {heroText.description}\n                            </p>\n                        </motion.div>\n                    </div>\n                </div>\n            </div>\n\n            {isMobile ? (\n                isMobileCanvasCoverDiv\n            ) : null}\n        </motion.div>\n\n    );\n}\n\nexport default HeroCard;","import { motion } from 'framer-motion';\nimport {customTailwind} from \"../../constants/custom-tailwind\";\nimport {isMobile} from \"react-device-detect\";\nimport {heroText} from \"../../constants/config-web-paragraph\";\n\n\nfunction HeroCardMobile() {\n    const isMobileCanvasCoverDiv = (\n        <>\n            <div className=\"isMobileCanvasCoverDiv-right\"></div>\n            <div className=\"isMobileCanvasCoverDiv-buttom\"></div>\n        </>\n    )\n\n    return (\n        <motion.div\n            id=\"hero-card-bg\"\n            className={` ${customTailwind.paddingX} flex flex-row items-start gap-5`}\n            initial={{opacity: 0, scale: 0.5}}\n            animate={{opacity: 1, scale: 1}}\n            transition={{duration: 5, type: 'spring', damping: 10, stiffness: 100}}\n        >\n            <div>\n                <div id=\"hero-card-top\">\n                    <div\n                        className=\"hero-card\"\n                    >\n                        <div className='hero-card-title flex flex-col items-center mt-5'>\n                            <div className='w-5 h-5 rounded-full bg-[#FF7F50]'/>\n                            <div className='w-1 sm:h-80 h-40 violet-gradient'/>\n                        </div>\n                        <motion.div className={\"hero-card-des\"}>\n                            <h1 className={`${customTailwind.heroHeadText} text-white`}>{heroText.title_f}\n                                <span className='text-[#FF7F50]'>{heroText.title_l}</span>\n                            </h1>\n                            <br/>\n                            <p className={`${customTailwind.heroSubText} mt-2 text-white-100`}>\n                                {heroText.description}\n                            </p>\n                        </motion.div>\n                    </div>\n                </div>\n            </div>\n\n            {isMobile ? (\n                isMobileCanvasCoverDiv\n            ) : null}\n        </motion.div>\n\n    );\n}\n\nexport default HeroCardMobile;","import TheThinkerCanvas from \"../canvas/TheThinker.jsx\";\nimport MouseScrollicon from \"../widgets/MouseScrollicon.jsx\";\nimport HeroCard from \"../widgets/HeroCard.jsx\";\nimport HeroCard_Mobile from \"../widgets/HeroCard_Mobile.jsx\";\nimport { isMobile } from \"react-device-detect\";\n\n\nfunction Hero() {\n    return (\n        <section id='hero' className=\"hero-container h-screen layout-container\">\n            {/* eslint-disable-next-line react/jsx-pascal-case */}\n            {isMobile ? <HeroCard_Mobile/> : <HeroCard/>}\n            <TheThinkerCanvas/>\n            <MouseScrollicon/>\n        </section>\n    );\n}\n\nexport default Hero;","import { Html, useProgress } from \"@react-three/drei\";\n\nconst CanvasLoader = () => {\n    const { progress } = useProgress();\n    return (\n        <Html\n            as='div'\n            center\n            style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                flexDirection: \"column\",\n            }}\n        >\n            <span className='canvas-loader'></span>\n            <p\n                style={{\n                    fontSize: 14,\n                    color: \"#F1F1F1\",\n                    fontWeight: 800,\n                    marginTop: 40,\n                }}\n            >\n                {progress.toFixed(2)}%\n            </p>\n        </Html>\n    );\n};\n\nexport default CanvasLoader;\n"],"names":["refs","value","forEach","ref","current","Float","React","_ref","forwardRef","children","enabled","speed","rotationIntensity","floatIntensity","floatingRange","props","offset","Math","random","useFrame","state","_floatingRange$","_floatingRange$2","t","clock","getElapsedTime","rotation","x","cos","y","sin","z","yPosition","THREE","mapLinear","position","updateMatrix","mergeRefs","matrixAutoUpdate","_ray","Ray","_plane","Plane","TILT_LIMIT","PI","moduloWrapAround","capacity","OrbitControls","EventDispatcher","constructor","object","domElement","__publicField","Vector3","Infinity","LEFT","UP","RIGHT","BOTTOM","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","ONE","TOUCH","TWO","DOLLY_PAN","this","target0","target","clone","position0","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","setPolarAngle","currentPhi","phiDist","abs","sphericalDelta","scope","update","setAzimuthalAngle","currentTheta","thetaDist","getDistance","distanceTo","listenToKeyEvents","domElement2","addEventListener","onKeyDown","_domElementKeyEvents","stopListenToKeyEvents","removeEventListener","saveState","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","STATE","NONE","up","quat","Quaternion","setFromUnitVectors","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","autoRotate","rotateLeft","autoRotateSpeed","enableDamping","dampingFactor","min","minAzimuthAngle","max","maxAzimuthAngle","isFinite","minPolarAngle","maxPolarAngle","makeSafe","addScaledVector","panOffset","add","zoomToCursor","performCursorZoom","isOrthographicCamera","radius","clampDistance","scale","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","newRadius","PerspectiveCamera","isPerspectiveCamera","prevRadius","length","radiusDelta","dollyDirection","updateMatrixWorld","mouseBefore","mouse","unproject","minZoom","maxZoom","mouseAfter","console","warn","screenSpacePanning","transformDirection","matrix","origin","direction","dot","setFromNormalAndCoplanarPoint","intersectPlane","OrthographicCamera","distanceToSquared","EPS","quaternion","connect","document","error","style","touchAction","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","dispose","_a","_b","_c","_d","_e","ownerDocument","onPointerMove","_f","onPointerUp","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","zoomSpeed","angle","reverseOrbit","reverseHorizontalOrbit","rotateUp","reverseVerticalOrbit","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","targetDistance","tan","fov","clientHeight","right","left","clientWidth","top","bottom","enablePan","dollyOut","dollyScale","enableZoom","dollyIn","updateMouseParameters","event","rect","getBoundingClientRect","clientX","clientY","w","width","h","height","normalize","dist","minDistance","maxDistance","handleMouseDownRotate","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","rotateSpeed","handleTouchMovePan","panSpeed","handleTouchMoveDolly","push","addPointer","pointerType","trackPointer","touches","enableRotate","DOLLY_ROTATE","onTouchStart","mouseAction","button","mouseButtons","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","removePointer","releasePointerCapture","pointerId","preventDefault","handleMouseWheel","needsUpdate","code","keys","keyPanSpeed","handleKeyDown","i","splice","pointer","makeDefault","camera","regress","keyEvents","onChange","onStart","onEnd","restProps","invalidate","useThree","defaultCamera","gl","events","setEvents","get","performance","explCamera","explDomElement","connected","controls","OrbitControls$1","callback","e","onStartCb","onEndCb","old","_extends","useGLTF","preload","concat","process","ThinkerModel","memo","scene","useMemo","isMobile","rotationIndex","useEffect","traverse","child","isMesh","castShadow","receiveShadow","geometry","Array","isArray","material","_jsxs","_Fragment","_jsx","intensity","color","GroundPlane","texture","useLoader","TextureLoader","args","map","metalness","roughness","DynamicFrameControl","accumDelta","delta","TheThinkerCanvas","className","Canvas","shadows","dpr","near","far","antialias","alpha","Suspense","fallback","CanvasLoader","Preload","all","href","motion","div","animate","transition","duration","repeat","repeatType","cardRef","useRef","animationFrameId","lastMousePosition","handleMouseMove","requestAnimationFrame","updateCardRotation","window","innerWidth","n","innerHeight","transform","topElement","querySelector","cancelAnimationFrame","isMobileCanvasCoverDiv","id","customTailwind","paddingX","initial","opacity","damping","stiffness","heroHeadText","heroText","title_f","title_l","heroSubText","description","HeroCard_Mobile","HeroCard","MouseScrollicon","progress","useProgress","Html","as","center","display","justifyContent","alignItems","flexDirection","fontSize","fontWeight","marginTop","toFixed"],"sourceRoot":""}