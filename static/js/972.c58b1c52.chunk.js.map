{"version":3,"file":"static/js/972.c58b1c52.chunk.js","mappings":"qKAGA,MAAMA,EAAmBC,EAAAA,MAAW,IAAM,+BA4C1C,EA1C4BC,IAAe,IAAd,KAAEC,GAAMD,EACjC,MAAOE,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GACrCC,GAAeC,EAAAA,EAAAA,QAAO,MACtBC,EAAWC,EAAAA,GAAW,GAAK,IAC3BC,EAASD,EAAAA,GAAW,EAAI,EA2B9B,OAzBAE,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAW,IAAIC,sBACjBC,IAAc,IAAZC,GAAMD,EACAC,EAAMC,iBACNZ,GAAa,GACbQ,EAASK,UAAUF,EAAMG,QAC7B,GAEJ,CACIC,UAAW,KAQnB,OAJIb,EAAac,SACbR,EAASS,QAAQf,EAAac,SAG3B,KACCd,EAAac,SACbR,EAASK,UAAUX,EAAac,QACpC,CACH,GACF,KAICE,EAAAA,EAAAA,KAAA,OAAKC,GAAG,uBAAuBC,IAAKlB,EAAcmB,MAAO,CAAEC,UAAW,SAAUC,SAC3ExB,IACGmB,EAAAA,EAAAA,KAACtB,EAAAA,SAAc,CAAC4B,UAAUN,EAAAA,EAAAA,KAAA,OAAAK,SAAK,eAAiBA,UAC5CL,EAAAA,EAAAA,KAACvB,EAAgB,CAACG,KAAMA,EAAMM,SAAUA,EAAUE,OAAQA,OAGhE,C","sources":["component/layout/ParticleTextWrapper.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { isMobile } from \"react-device-detect\";\n\nconst LazyParticleText = React.lazy(() => import(\"../canvas/ParticleText.jsx\"));\n\nconst ParticleTextWrapper = ({ text }) => {\n    const [isVisible, setIsVisible] = useState(false);\n    const containerRef = useRef(null);\n    const fontSize = isMobile ? 60 : 160;\n    const pixGap = isMobile ? 6 : 8;\n\n    useEffect(() => {\n        const observer = new IntersectionObserver(\n            ([entry]) => {\n                if (entry.isIntersecting) {\n                    setIsVisible(true);\n                    observer.unobserve(entry.target);\n                }\n            },\n            {\n                threshold: 0.1,\n            }\n        );\n\n        if (containerRef.current) {\n            observer.observe(containerRef.current);\n        }\n\n        return () => {\n            if (containerRef.current) {\n                observer.unobserve(containerRef.current);\n            }\n        };\n    }, []);\n\n\n    return (\n        <div id=\"ParticleText-Warpper\" ref={containerRef} style={{ minHeight: \"100vh\" }}>\n            {isVisible && (\n                <React.Suspense fallback={<div>Loading...</div>}>\n                    <LazyParticleText text={text} fontSize={fontSize} pixGap={pixGap}/>\n                </React.Suspense>\n            )}\n        </div>\n    );\n};\n\nexport default ParticleTextWrapper;\n"],"names":["LazyParticleText","React","_ref","text","isVisible","setIsVisible","useState","containerRef","useRef","fontSize","isMobile","pixGap","useEffect","observer","IntersectionObserver","_ref2","entry","isIntersecting","unobserve","target","threshold","current","observe","_jsx","id","ref","style","minHeight","children","fallback"],"sourceRoot":""}