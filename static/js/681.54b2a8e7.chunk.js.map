{"version":3,"file":"static/js/681.54b2a8e7.chunk.js","mappings":"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","sources":["component/section/OverviewInfo.jsx","constants/config-skills.js","../node_modules/framer-motion/dist/es/render/dom/viewport/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/resolve-element.mjs","../node_modules/framer-motion/dist/es/utils/use-in-view.mjs","component/section/SkillCardList.jsx","component/widgets/MySocial.jsx","component/modal/The808Page.jsx","component/layout/Overview.jsx","utility/custom-motion.js","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","../node_modules/src/useInView.tsx"],"sourcesContent":["import { motion } from 'framer-motion';\nimport {customTailwind} from \"../../constants/custom-tailwind\";\nimport { fadeIn, textVariant } from \"../../utility/custom-motion\";\nimport {IntroductionOverView} from \"../../constants/config-web-paragraph\";\nimport { useInView } from 'react-intersection-observer';\n\nfunction OverviewInfo() {\n    const [ref, inView] = useInView({\n        triggerOnce: true,\n        rootMargin: \"-100px 0px\",\n    });\n    return (\n        <>\n            <motion.div\n                ref={ref}\n                variants={textVariant(0)}\n                initial=\"hidden\"\n                animate={inView ? \"show\" : \"hidden\"}>\n                <h2 className={customTailwind.sectionHeadText + \" mt-10 sm:mt-5 py-5 sm:py-1 gradient-title-text\"}>Overview</h2>\n            </motion.div>\n\n            <motion.p\n                ref={ref}\n                variants={fadeIn(\"\", \"\", 0.3, 4)}\n                initial=\"hidden\"\n                animate={inView ? \"show\" : \"hidden\"}\n                className='mt-4 mb-4 text-[#C0C0C0] text-[17px] max-w-4xl leading-[30px] the-paragraph'\n            >\n                {IntroductionOverView.paragraph}\n            </motion.p>\n        </>\n    );\n}\n\nexport default OverviewInfo;\n","export const skills = [\n    {\n        title: \"javascript\",\n        logoURL: \"/techIcon/javascript.png\",\n    },\n    {\n        title: \"React Native Developer\",\n        logoURL: \"/techIcon/css.png\",\n    },\n    {\n        title: \"Backend Developer\",\n        logoURL: \"/techIcon/html.png\",\n    },\n    {\n        title: \"Content Creator\",\n        logoURL: \"/techIcon/git.png\",\n    },\n    {\n        title: \"Web Developer\",\n        logoURL: \"/techIcon/nodejs.png\",\n    },\n    {\n        title: \"React Native Developer\",\n        logoURL: \"/techIcon/reactjs.png\",\n    },\n    {\n        title: \"Backend Developer\",\n        logoURL: \"/techIcon/tailwind.png\",\n    },\n    {\n        title: \"Content Creator\",\n        logoURL: \"/techIcon/threejs.svg\",\n    },\n    {\n        title: \"Content Creator\",\n        logoURL: \"/techIcon/typescript.png\",\n    },\n    {\n        title: \"Content Creator\",\n        logoURL: \"/techIcon/aws.png\",\n    },\n    {\n        title: \"Content Creator\",\n        logoURL: \"/techIcon/java.png\",\n    },\n    {\n        title: \"Content Creator\",\n        logoURL: \"/techIcon/python.png\",\n    },\n    {\n        title: \"Content Creator\",\n        logoURL: \"/techIcon/mysql.png\",\n    },\n    {\n        title: \"Content Creator\",\n        logoURL: \"/techIcon/aspcore.png\",\n    },\n    {\n        title: \"Content Creator\",\n        logoURL: \"/techIcon/csharp.svg\",\n    },\n    {\n        title: \"Content Creator\",\n        logoURL: \"/techIcon/docker.svg\",\n    },\n    {\n        title: \"Content Creator\",\n        logoURL: \"/techIcon/expressjs.svg\",\n    },\n    {\n        title: \"Content Creator\",\n        logoURL: \"/techIcon/jest.svg\",\n    },\n    {\n        title: \"Content Creator\",\n        logoURL: \"/techIcon/redux.png\",\n    },\n]\n","import { resolveElements } from '../utils/resolve-element.mjs';\n\nconst thresholds = {\n    some: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"some\" } = {}) {\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry);\n                if (typeof newOnEnd === \"function\") {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (onEnd) {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n","import { invariant } from '../../../utils/errors.mjs';\n\nfunction resolveElements(elements, scope, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        let root = document;\n        if (scope) {\n            invariant(Boolean(scope.current), \"Scope provided, but no element detected.\");\n            root = scope.current;\n        }\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = root.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = root.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n","import { useState, useEffect } from 'react';\nimport { inView } from '../render/dom/viewport/index.mjs';\n\nfunction useInView(ref, { root, margin, amount, once = false } = {}) {\n    const [isInView, setInView] = useState(false);\n    useEffect(() => {\n        if (!ref.current || (once && isInView))\n            return;\n        const onEnter = () => {\n            setInView(true);\n            return once ? undefined : () => setInView(false);\n        };\n        const options = {\n            root: (root && root.current) || undefined,\n            margin,\n            amount,\n        };\n        return inView(ref.current, onEnter, options);\n    }, [root, ref, margin, once, amount]);\n    return isInView;\n}\n\nexport { useInView };\n","import React, { useRef, useEffect, useState } from 'react';\nimport { skills } from '../../constants/config-skills';\nimport {motion, useInView} from \"framer-motion\";\n\n// SkillCard 组件\nconst SkillCard = ({ skill }) => (\n    <div className=\"flex justify-center items-center bg-white rounded-[1rem] shadow-md w-[60px] h-[60px] mr-4 text-sm text-center\">\n        <img\n            src={process.env.PUBLIC_URL + skill.logoURL}\n            alt={skill.name}\n            className=\"w-[50px] h-[50px]\"\n        />\n    </div>\n);\n\n\n// InfiniteScrollRow 组件\nconst InfiniteScrollRow = ({ skills, speed }) => {\n    const containerRef = useRef(null);\n    const contentRef = useRef(null);\n    const positionRef = useRef(0);\n    const [repeatCount, setRepeatCount] = useState(1);\n    const rowWidthPerCycle = useRef(0);\n    const repeatedSkills = React.useMemo(() => {\n        return Array.from({ length: repeatCount }).flatMap(() => skills);\n    }, [repeatCount, skills]);\n\n\n    useEffect(() => {\n        if (contentRef.current) {\n            rowWidthPerCycle.current = contentRef.current.scrollWidth / repeatCount;\n        }\n    }, [repeatCount, skills]);\n\n\n    // 动态计算需要的重复次数\n    const calculateRepeatCount = () => {\n        if (containerRef.current && contentRef.current) {\n            const containerWidth = containerRef.current.offsetWidth;\n            const cardWidthWithMargin = contentRef.current.children[0].offsetWidth + 16; // 单个方块宽度 + margin-right (16px)\n            const count = Math.ceil(containerWidth / (cardWidthWithMargin * skills.length)) + 2;\n            setRepeatCount(count);\n        }\n    };\n\n    useEffect(() => {\n        calculateRepeatCount();\n        window.addEventListener('resize', calculateRepeatCount);\n        return () => {\n            window.removeEventListener('resize', calculateRepeatCount);\n        };\n    }, [skills]);\n\n    useEffect(() => {\n        if (!contentRef.current) return;\n\n        const totalRowWidth = contentRef.current.scrollWidth;\n\n        let animationFrameId;\n\n        const scroll = () => {\n            positionRef.current -= speed;\n\n            let current = positionRef.current;\n\n            if (speed > 0 && Math.abs(current) >= totalRowWidth / repeatCount) {\n                current = 0;\n            }\n\n            if (speed < 0 && current >= 0) {\n                current = -totalRowWidth / repeatCount;\n            }\n\n            positionRef.current = current;\n\n            if (contentRef.current) {\n                contentRef.current.style.transform = `translateX(${current}px)`;\n            }\n\n            animationFrameId = requestAnimationFrame(scroll);\n        };\n\n\n        animationFrameId = requestAnimationFrame(scroll);\n\n        return () => {\n            cancelAnimationFrame(animationFrameId);\n        };\n    }, [skills, speed, repeatCount]);\n\n    return (\n        <div ref={containerRef} className=\"skill-loop-box relative overflow-hidden w-full h-24 mx-auto\">\n            <div\n                ref={contentRef}\n                className=\"flex absolute whitespace-nowrap\"\n                style={{\n                    transform: `translateX(${positionRef}px)`,\n                }}\n            >\n                {repeatedSkills.map((skill, index) => (\n                    <SkillCard key={index} skill={skill} />\n                ))}\n\n            </div>\n        </div>\n    );\n};\n\n// SkillCardList 组件\nconst SkillCardList = () => {\n    const splitSkillsIntoRows = (skills) => {\n        const total = skills.length;\n        const perRow = Math.ceil(total / 3);\n        const row1 = skills.slice(0, perRow);\n        const row2 = skills.slice(perRow, perRow * 2);\n        const row3 = skills.slice(perRow * 2);\n        return [row1, row2, row3];\n    };\n\n    const [row1, row2, row3] = splitSkillsIntoRows(skills);\n    const [speed, setSpeed] = useState(0.25);\n    const moveToLeft = speed;\n    const moveToRight = -speed;\n    const motionRef = React.useRef(null);\n    const isInView = useInView(motionRef, { once: true });\n    const fadeInVariants = {\n        hidden: { opacity: 0, y: 0 },\n        visible: {\n            opacity: 1,\n            y: 0,\n            transition: { duration: 3, delay: 0 },\n        },\n    };\n\n    return (\n        <motion.div\n            ref={motionRef}\n            initial=\"hidden\"\n            animate={isInView ? 'visible' : 'hidden'}\n            variants={fadeInVariants}\n        >\n            <div\n                className=\"mt-4 flex flex-col space-y-4 mx-auto min-w-[300px] w-full sm:max-w-[300px] md:max-w-[500px] lg:max-w-[700px] xl:max-w-[1000px]\">\n                <InfiniteScrollRow skills={row1} speed={moveToLeft}/>\n                <InfiniteScrollRow skills={row2} speed={moveToRight}/>\n                <InfiniteScrollRow skills={row3} speed={moveToLeft}/>\n            </div>\n        </motion.div>\n\n    );\n};\n\nexport default SkillCardList;\n","import React from \"react\";\nimport { motion, useInView } from 'framer-motion';\n\nfunction MySocial({handle808Page}) {\n    // const [isOrbit1Paused, setIsOrbit1Paused] = React.useState(false);\n    // const [isOrbit2Paused, setIsOrbit2Paused] = React.useState(false);\n    const ref = React.useRef(null);\n    const isInView = useInView(ref, { once: true });\n    const fadeInVariants = {\n        hidden: { opacity: 0, y: 20 },\n        visible: {\n            opacity: 1,\n            y: 0,\n            transition: { duration: 3, delay: 0 },\n        },\n    };\n\n    const orbit1Ref = React.useRef(null);\n\n    const handleHover = (e) => {\n        const orbit = e.target.dataset.orbit;\n        if (orbit === 'orbit1') {\n            orbit1Ref.current?.classList.add('paused');\n        }\n\n    };\n\n    const handleHoverLeave = (e) => {\n        const orbit = e.target.dataset.orbit;\n        if (orbit === 'orbit1') {\n            orbit1Ref.current?.classList.add('paused');\n        }\n\n    };\n\n\n    const handleIconClick = (url, orbit, socialStatus, name) => {\n        if (socialStatus === 'done') {\n            window.open(url, '_blank');\n        } else if (socialStatus === 'undone') {\n            handle808Page(name);\n        }\n    }\n\n    const myBlogIcon = process.env.PUBLIC_URL + '/blog.png';\n    const mediumIcon = \"https://cdn.simpleicons.org/medium/000000\";\n    const youtubeIcon = \"https://cdn.simpleicons.org/youtube/FF0000\";\n    const bilibiliIcon = \"https://cdn.simpleicons.org/bilibili/00A1D6\";\n    const xIcon = \"https://cdn.simpleicons.org/x/000000\";\n    const behanceIcon = \"https://cdn.simpleicons.org/behance/1769FF\";\n\n    const orbitHTML = () => {\n        return (\n            <div className=\"my-social-box\">\n                <h2 className={\"text-[30px] gradient-title-text\"}>Follow me on</h2>\n                <div className=\"orbit-system-box\">\n                    <div className={'orbit-system-box-bg'}></div>\n                    {/* GitHub Icon */}\n                    <div className=\"sun\"\n                         onClick={() => handleIconClick('https://github.com/Mikalasa', 'sun', 'done')}\n                    >\n                        <img\n                            src=\"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\"\n                            alt=\"GitHub\"\n                        />\n                    </div>\n\n                    {/* Orbit1: Medium, Youtube, Medium */}\n                    <div ref={orbit1Ref} className={`orbit-1 orbit-1-move`}>\n                        <div className=\"planet-wrapper\">\n                            <div className=\"planet\"\n                                 onMouseEnter={handleHover}\n                                 onMouseLeave={handleHoverLeave}\n                                 onClick={() => handleIconClick('https://medium.com/@xingyi-posts', 'orbit1', 'done', 'medium')}\n                            >\n                                <img\n                                    src={mediumIcon}\n                                    alt=\"Medium orbit1\"\n                                    data-orbit=\"orbit1\"\n                                />\n                            </div>\n                        </div>\n                        <div className=\"planet-wrapper\">\n                            <div className=\"planet\"\n                                 onMouseEnter={handleHover}\n                                 onMouseLeave={handleHoverLeave}\n                                 onClick={() => handleIconClick('https://youtube.com', 'orbit1', 'undone', 'youtube')}\n                            >\n                                <img\n                                    src={youtubeIcon}\n                                    alt=\"Youtube orbit1\"\n                                    data-orbit=\"orbit1\"\n                                />\n                            </div>\n                        </div>\n                        <div className=\"planet-wrapper\">\n                            <div className=\"planet\"\n                                 onMouseEnter={handleHover}\n                                 onMouseLeave={handleHoverLeave}\n                                 onClick={() => handleIconClick('https://mikalasa.github.io/my-blog/', 'orbit1', 'done', 'blog')}\n                            >\n                                <img\n                                    src={myBlogIcon}\n                                    alt=\"Medium orbit1\"\n                                    data-orbit=\"orbit1\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Orbit2: Bilibili, Twitter, Behance */}\n                    {/*<div className={`orbit-2 orbit-2-move ${isOrbit2Paused ? 'paused' : ''}`}>\n                        <div className=\"planet-wrapper\">\n                            <div className=\"planet\"\n                                 onMouseEnter={handleHover}\n                                 onMouseLeave={handleHoverLeave}\n                                 onClick={() => handleIconClick('https://www.bilibili.com', 'orbit2', 'undone', 'bilibili')}\n                            >\n                                <img\n                                    src={bilibiliIcon}\n                                    alt=\"Bilibili orbit2\"\n                                />\n                            </div>\n                        </div>\n                        <div className=\"planet-wrapper\">\n                            <div className=\"planet\"\n                                 onMouseEnter={handleHover}\n                                 onMouseLeave={handleHoverLeave}\n                                 onClick={() => handleIconClick('https://twitter.com', 'orbit2', 'undone', 'twitter')}\n                            >\n                                <img\n                                    src={xIcon}\n                                    alt=\"Twitter orbit2\"\n                                />\n                            </div>\n                        </div>\n                        <div className=\"planet-wrapper\">\n                            <div className=\"planet\"\n                                 onMouseEnter={handleHover}\n                                 onMouseLeave={handleHoverLeave}\n                                 onClick={() => handleIconClick('https://www.behance.net/xingyixxx', 'orbit2', 'done', 'behance')}\n                            >\n                                <img\n                                    src={behanceIcon}\n                                    alt=\"Behance orbit2\"\n                                />\n                            </div>\n                        </div>\n                    </div>*/}\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <motion.div\n            ref={ref}\n            initial=\"hidden\"\n            animate={isInView ? 'visible' : 'hidden'}\n            variants={fadeInVariants}\n        >\n            {orbitHTML()}\n        </motion.div>\n    );\n}\n\nexport default MySocial;\n","function The808Page({ platform, handle808Page }) {\n    const platformImageMap = {\n        twitter: \"https://cdn.simpleicons.org/x/000000\",\n        bilibili: \"https://cdn.simpleicons.org/bilibili/00A1D6\",\n        youtube: \"https://cdn.simpleicons.org/youtube/FF0000\",\n    };\n\n    const platformImage = platformImageMap[platform] || \"https://via.placeholder.com/150\";\n\n    const bottomIcons = [\n        { url: \"https://github.com/Mikalasa\", img: \"https://cdn.simpleicons.org/github/ffffff\" },\n        { url: \"https://medium.com/@xingyi-posts\", img: \"https://cdn.simpleicons.org/medium/ffffff\" },\n        { url: \"https://www.behance.net/xingyixxx\", img: \"https://cdn.simpleicons.org/behance/1769FF\" },\n        { url: \"https://mikalasa.github.io/my-blog/\", img: `${process.env.PUBLIC_URL}/blog-1.png` },\n    ];\n\n    return (\n        <div\n            className=\"fixed top-0 left-0 w-screen h-screen flex items-center justify-center bg-opacity-70 z-50\"\n            style={{ backgroundColor: \"rgba(20, 20, 20, 0.9)\" }}\n        >\n            {/* Card */}\n            <div className=\"relative bg-[#2a2a2a] text-center rounded-2xl p-8 shadow-xl w-full max-w-lg\">\n                {/* Close Button */}\n                <button\n                    onClick={() => handle808Page(\"\")}\n                    className=\"absolute top-4 right-4 text-white text-2xl font-bold hover:text-red-500 hover:scale-110 transition duration-300\"\n                >\n                    ✖\n                </button>\n\n                {/* Error Code */}\n                <h1 className=\"text-[144px] font-extrabold text-gray-100 leading-none mb-4\">\n                    808\n                </h1>\n                <p className=\"text-lg font-medium text-gray-400 mb-4\">Uh-oh! Something went wrong.</p>\n\n                {/* Platform Content */}\n                <div className=\"flex flex-col items-center mb-8\">\n                    <img\n                        src={platformImage}\n                        alt={platform}\n                        className=\"w-24 h-24 object-cover rounded-10 shadow-lg mb-4\"\n                    />\n                    <p className=\"text-gray-300 text-base\">\n                        My <span className=\"font-bold text-yellow-400\">{platform}</span> channel is coming soon 🎉\n                    </p>\n                </div>\n\n                {/* Other Platforms */}\n                <p className=\"text-gray-400 text-sm mb-4\">\n                    Meanwhile, you can check out my other platforms:\n                </p>\n                <div className=\"flex justify-center gap-6\">\n                    {bottomIcons.map((icon, index) => (\n                        <a\n                            key={index}\n                            href={icon.url}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"transition-transform transform hover:scale-110\"\n                        >\n                            <div className=\"bg-[#3b3b3b] rounded-full p-3 shadow-lg hover:bg-opacity-80 transition duration-300\">\n                                <img\n                                    src={icon.img}\n                                    alt={`icon-${index}`}\n                                    className=\"w-10 h-10 object-cover\"\n                                />\n                            </div>\n                        </a>\n                    ))}\n                </div>\n            </div>\n\n            {/* Fade-in Animation */}\n            <style>{`\n                @keyframes fadeIn {\n                    from {\n                        opacity: 0;\n                        transform: translateY(20px);\n                    }\n                    to {\n                        opacity: 1;\n                        transform: translateY(0);\n                    }\n                }\n\n                .bg-opacity-70 {\n                    backdrop-filter: blur(10px);\n                }\n            `}</style>\n        </div>\n    );\n}\n\nexport default The808Page;\n","import OverviewInfo from \"../section/OverviewInfo\";\nimport SkillCardList from \"../section/SkillCardList\";\nimport MySocial from \"../widgets/MySocial\";\nimport The808Page from \"../modal/The808Page\";\nimport React, {useState} from \"react\";\n\nfunction Overview() {\n    const [show808Page, setShow808Page] = useState(false);\n    const [platform, setPlatform] = useState('');\n\n    const handle808Page = (name) => {\n        if (show808Page) {\n            setShow808Page(false);\n            setPlatform('');\n        }\n        if (!show808Page) {\n            setShow808Page(true);\n            setPlatform(name);\n        }\n    }\n    return (\n        <section id=\"overview\">\n            <div className=\"layout-container w-4/5 min-h-screen mx-auto grid grid-cols-1 md:grid-cols-[auto_auto] gap-16 items-center\">\n                <div className=\"overview-box flex flex-col justify-evenly\">\n                    <OverviewInfo />\n                    <SkillCardList />\n                </div>\n                <MySocial handle808Page={handle808Page} />\n                {show808Page ? <The808Page platform={platform} handle808Page={handle808Page}/> : null}\n            </div>\n        </section>\n    );\n}\n\nexport default Overview;","export const textVariant = (delay) => {\n    return {\n        hidden: {\n            y: -50,\n            opacity: 0,\n        },\n        show: {\n            y: 0,\n            opacity: 1,\n            transition: {\n                type: \"spring\",\n                duration: 1.25,\n                delay: delay,\n            },\n        },\n    };\n};\n\nexport const skillCardVariants = {\n    hidden: { scale: 0, opacity: 0 },\n    visible: (custom) => ({\n        scale: 1,\n        opacity: 1,\n        transition: { delay: custom * 0.1, type: 'spring', stiffness: 120 },\n    }),\n};\n\n\nexport const fadeIn = (direction, type, delay, duration) => {\n    return {\n        hidden: {\n            x: direction === \"left\" ? 100 : direction === \"right\" ? -100 : 0,\n            y: direction === \"up\" ? 100 : direction === \"down\" ? -100 : 0,\n            opacity: 0,\n        },\n        show: {\n            x: 0,\n            y: 0,\n            opacity: 1,\n            transition: {\n                type: type,\n                delay: delay,\n                duration: duration,\n                ease: \"easeOut\",\n            },\n        },\n    };\n};\n\nexport const zoomIn = (delay, duration) => {\n    return {\n        hidden: {\n            scale: 0,\n            opacity: 0,\n        },\n        show: {\n            scale: 1,\n            opacity: 1,\n            transition: {\n                type: \"tween\",\n                delay: delay,\n                duration: duration,\n                ease: \"easeOut\",\n            },\n        },\n    };\n};\n\nexport const slideIn = (direction, type, delay, duration) => {\n    return {\n        hidden: {\n            x: direction === \"left\" ? \"-100%\" : direction === \"right\" ? \"100%\" : 0,\n            y: direction === \"up\" ? \"100%\" : direction === \"down\" ? \"100%\" : 0,\n        },\n        show: {\n            x: 0,\n            y: 0,\n            transition: {\n                type: type,\n                delay: delay,\n                duration: duration,\n                ease: \"easeOut\",\n            },\n        },\n    };\n};\n\nexport const staggerContainer = (staggerChildren, delayChildren) => {\n    return {\n        hidden: {},\n        show: {\n            transition: {\n                staggerChildren: staggerChildren,\n                delayChildren: delayChildren || 0,\n            },\n        },\n    };\n};\n\n","import type { ObserverInstanceCallback } from \"./index\";\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit[\"root\"]) {\n  if (!root) return \"0\";\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === \"root\"\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  const id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    // biome-ignore lint/style/useConst: It's fine to use let here, as we are going to assign it later\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === \"undefined\" &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  const callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from \"react\";\nimport type { IntersectionObserverProps, PlainChildrenProps } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== \"function\";\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from \"react\";\nimport type { InViewHookResponse, IntersectionOptions } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions[\"onChange\"]>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: threshold is not correctly detected as a dependency\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["ref","inView","useInView","triggerOnce","rootMargin","_jsxs","_Fragment","children","_jsx","motion","div","variants","textVariant","initial","animate","className","customTailwind","sectionHeadText","p","fadeIn","IntroductionOverView","paragraph","skills","title","logoURL","thresholds","some","all","elementOrSelector","onStart","root","margin","amount","arguments","length","undefined","elements","scope","selectorCache","_a","document","invariant","Boolean","current","querySelectorAll","Element","Array","from","resolveElements","activeIntersections","WeakMap","observer","IntersectionObserver","entries","forEach","entry","onEnd","get","target","isIntersecting","newOnEnd","set","unobserve","delete","threshold","element","observe","disconnect","once","isInView","setInView","useState","useEffect","options","onEnter","SkillCard","_ref","skill","src","process","alt","name","InfiniteScrollRow","_ref2","speed","containerRef","useRef","contentRef","positionRef","repeatCount","setRepeatCount","rowWidthPerCycle","repeatedSkills","React","flatMap","scrollWidth","calculateRepeatCount","containerWidth","offsetWidth","cardWidthWithMargin","count","Math","ceil","window","addEventListener","removeEventListener","totalRowWidth","animationFrameId","scroll","abs","style","transform","concat","requestAnimationFrame","cancelAnimationFrame","map","index","SkillCardList","row1","row2","row3","total","perRow","slice","splitSkillsIntoRows","setSpeed","moveToLeft","moveToRight","motionRef","hidden","opacity","y","visible","transition","duration","delay","handle808Page","orbit1Ref","handleHover","e","_orbit1Ref$current","dataset","orbit","classList","add","handleHoverLeave","_orbit1Ref$current2","handleIconClick","url","socialStatus","open","onClick","onMouseEnter","onMouseLeave","platform","platformImage","twitter","bilibili","youtube","bottomIcons","img","backgroundColor","icon","href","rel","show808Page","setShow808Page","setPlatform","id","OverviewInfo","MySocial","The808Page","show","type","direction","x","ease","observerMap","Map","RootIds","rootId","unsupportedValue","optionsToId","Object","keys","sort","filter","key","has","toString","callback","fallbackInView","bounds","getBoundingClientRect","intersectionRatio","time","boundingClientRect","intersectionRect","rootBounds","instance","trackVisibility","isVisible","isArray","createObserver","callbacks","push","splice","indexOf","size","skip","initialInView","onChange","setRef","React2","state","setState","entryTarget","previousEntryTarget","result"],"sourceRoot":""}